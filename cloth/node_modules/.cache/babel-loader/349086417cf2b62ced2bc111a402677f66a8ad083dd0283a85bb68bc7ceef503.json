{"ast":null,"code":"import React from'react';import'../Style/Login.css';import KeyboardBackspaceRoundedIcon from'@mui/icons-material/KeyboardBackspaceRounded';import{useState}from'react';import{app}from'../firebase';import{getAuth,signInWithPhoneNumber,RecaptchaVerifier}from\"firebase/auth\";import{useNavigate,Link}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignIn=()=>{const[phone,SetPhone]=useState('');const[OTP,SetOTP]=useState('');const[ConfirmStaus,SetConfirm]=useState('');const navigate=useNavigate();// for each phone number otp is the last six digit for each number\nconst phoneNumber1='+91 674 959 4030';const phoneNumber2='+91 98564 75644';const phoneNumber3='+91 98463 92084';const sendotp=e=>{const auth=getAuth(app);const appVerifier=new RecaptchaVerifier(auth,'captcha',{'size':'invisible'});e.preventDefault();signInWithPhoneNumber(auth,phone,appVerifier).then(Response=>{window.confirmationResult=Response;console.log('this is the result',Response);alert('OTP is send to your phone number');SetConfirm(Response.confirm.name);}).catch(err=>{console.log(err);});};const verifyotp=async e=>{e.preventDefault();window.confirmationResult.confirm(OTP).then(async result=>{// User signed in successfully.\nconsole.log(result);if(result.operationType===\"signIn\"){alert('success');navigate('/menu');const userphone=result.user.phoneNumber.replace('+91','');// set user phone to localStorage\nwindow.localStorage.setItem('PhoneNumber',userphone);// send user phone number to backend \nconst response=await axios.post('http://localhost:8000/signin',{userphone});console.log(response);if(response.data==='user is created'){const getdata=await axios.get('http://localhost:8000/getuser',{params:{Phone:userphone}});if(getdata.data==='User Not Exist'){alert('try again');}else{window.localStorage.setItem('userData',JSON.stringify(getdata.data));}}else if(response.data==='user is not created'){alert('try again');}else{window.localStorage.setItem('userData',JSON.stringify(response.data));window.location.reload();}}else{alert('failed');}}).catch(error=>{// User couldn't sign in (bad verification code?)\nconsole.log(error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"top-login-sec\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-wrapper-sec\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"t-b-arr\",children:/*#__PURE__*/_jsx(Link,{to:'/menu',children:/*#__PURE__*/_jsx(\"h1\",{id:\"back\",children:/*#__PURE__*/_jsx(KeyboardBackspaceRoundedIcon,{})})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"m-des-sec\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo-img-name\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"logo\",children:\"ella\"}),/*#__PURE__*/_jsx(\"h2\",{id:\"l-title\",children:\"SignIn\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"form-data-handle\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"des\",children:\"Enter mobile number to proceed\"}),/*#__PURE__*/_jsx(\"form\",{children:!ConfirmStaus?/*#__PURE__*/_jsxs(\"div\",{id:\"user-number\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"Number\",name:\"mobilenumber\",id:\"m-input\",placeholder:\"Enter Mobile Number\",onChange:e=>SetPhone('+91'+e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"con-log-btn\",onClick:sendotp,children:\"GET OTP\"})]}):/*#__PURE__*/_jsxs(\"div\",{id:\"user-otp\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"Number\",name:\"otp\",id:\"otp-input\",placeholder:\"Enter otp\",onChange:e=>{SetOTP(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"con-log-btn\",onClick:verifyotp,children:\"VERIFY OTP\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"captcha\"})]}),/*#__PURE__*/_jsxs(\"p\",{id:\"notice\",children:[\"We have use firebase to SignIn user using testing phone number \",/*#__PURE__*/_jsx(\"br\",{}),\" you can not send verification to your personal phone number\"]})]});};export default SignIn;","map":{"version":3,"names":["React","KeyboardBackspaceRoundedIcon","useState","app","getAuth","signInWithPhoneNumber","RecaptchaVerifier","useNavigate","Link","axios","jsx","_jsx","jsxs","_jsxs","SignIn","phone","SetPhone","OTP","SetOTP","ConfirmStaus","SetConfirm","navigate","phoneNumber1","phoneNumber2","phoneNumber3","sendotp","e","auth","appVerifier","preventDefault","then","Response","window","confirmationResult","console","log","alert","confirm","name","catch","err","verifyotp","result","operationType","userphone","user","phoneNumber","replace","localStorage","setItem","response","post","data","getdata","get","params","Phone","JSON","stringify","location","reload","error","className","children","to","id","type","placeholder","onChange","target","value","onClick"],"sources":["C:/Users/WIN 10/Cloth-Clone/cloth/src/Component/SignIn.js"],"sourcesContent":["import React from 'react'\r\nimport '../Style/Login.css'\r\nimport KeyboardBackspaceRoundedIcon from '@mui/icons-material/KeyboardBackspaceRounded';\r\nimport { useState } from 'react';\r\nimport { app } from '../firebase'\r\nimport { getAuth, signInWithPhoneNumber, RecaptchaVerifier, } from \"firebase/auth\";\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst SignIn = () => {\r\n    const [phone, SetPhone] = useState('')\r\n    const [OTP, SetOTP] = useState('')\r\n    const [ConfirmStaus, SetConfirm] = useState('')\r\n    const navigate = useNavigate();\r\n    // for each phone number otp is the last six digit for each number\r\n    const phoneNumber1 = '+91 674 959 4030'\r\n    const phoneNumber2 = '+91 98564 75644'\r\n    const phoneNumber3 = '+91 98463 92084'\r\n    const sendotp = (e) => {\r\n        const auth = getAuth(app)\r\n        const appVerifier = new RecaptchaVerifier(auth, 'captcha', { 'size': 'invisible' });\r\n        e.preventDefault()\r\n        signInWithPhoneNumber(auth, phone, appVerifier)\r\n            .then(Response => {\r\n                window.confirmationResult = Response;\r\n                console.log('this is the result', Response)\r\n                alert('OTP is send to your phone number')\r\n                SetConfirm(Response.confirm.name)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const verifyotp = async (e) => {\r\n        e.preventDefault()\r\n        window.confirmationResult.confirm(OTP).then(async (result) => {\r\n            // User signed in successfully.\r\n            console.log(result)\r\n            if (result.operationType === \"signIn\") {\r\n                alert('success')\r\n                navigate('/menu')\r\n                const userphone = result.user.phoneNumber.replace('+91', '')\r\n                // set user phone to localStorage\r\n                window.localStorage.setItem('PhoneNumber', userphone)\r\n                // send user phone number to backend \r\n                const response = await axios.post('http://localhost:8000/signin', {userphone})\r\n                console.log(response)\r\n                if(response.data === 'user is created'){\r\n                    const getdata = await axios.get('http://localhost:8000/getuser', {\r\n                        params: {Phone: userphone}\r\n                    })\r\n                    if(getdata.data === 'User Not Exist'){\r\n                        alert('try again')\r\n                    }else{\r\n                        window.localStorage.setItem('userData', JSON.stringify(getdata.data))\r\n                    }\r\n                }else if(response.data === 'user is not created'){\r\n                    alert('try again')\r\n                }else{\r\n                    window.localStorage.setItem('userData', JSON.stringify(response.data))\r\n                    window.location.reload()\r\n                }\r\n            }\r\n            else {\r\n                alert('failed')\r\n            }\r\n        }).catch((error) => {\r\n            // User couldn't sign in (bad verification code?)\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='top-login-sec'>\r\n            <div className='login-wrapper-sec'>\r\n                <div className='t-b-arr'>\r\n                    <Link to={'/menu'}><h1 id='back'><KeyboardBackspaceRoundedIcon /></h1></Link>\r\n                </div>\r\n                <div id='m-des-sec'>\r\n                    <div className='logo-img-name'>\r\n                        <h1 id='logo'>ella</h1>\r\n                        <h2 id='l-title'>SignIn</h2>\r\n                    </div>\r\n                    <div id='form-data-handle'>\r\n                        <p id='des'>Enter mobile number to proceed</p>\r\n                        <form>\r\n                            {!ConfirmStaus ?\r\n                                <div id='user-number'>\r\n                                    <input type=\"Number\" name=\"mobilenumber\" id=\"m-input\" placeholder='Enter Mobile Number' onChange={(e) => SetPhone('+91' + e.target.value)} />\r\n                                    <button type='submit' id='con-log-btn' onClick={sendotp}>GET OTP</button>\r\n                                </div>\r\n                                :\r\n                                <div id='user-otp'>\r\n                                    <input type=\"Number\" name=\"otp\" id=\"otp-input\" placeholder='Enter otp' onChange={(e) => { SetOTP(e.target.value) }} />\r\n                                    <button type='submit' id='con-log-btn' onClick={verifyotp}>VERIFY OTP</button>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div id='captcha'></div>\r\n            </div>\r\n            <p id='notice'>We have use firebase to SignIn user using testing phone number <br /> you can not send verification to your personal phone number</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}